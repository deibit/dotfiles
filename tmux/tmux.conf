# --- General Options ---
set-option -g allow-passthrough on
set-option -g default-terminal "xterm-ghostty"
set-option -g renumber-windows on
set-option -g set-clipboard on
set-option -g focus-events on
set-option -g mouse on
set-option -sg escape-time 0
set-option -g base-index 1
setw -g pane-base-index 1
setw -g bell-action none
setw -g window-status-activity-style fg=blue
set-option -g set-titles on
set-window-option -g monitor-activity on
set-window-option -g visual-activity off

# Terminal detection for environment
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# --- Status Bar ---
set-option -g status-interval 1
set-option -g status-bg colour235
set-option -g status-fg colour242
setw -g window-status-current-style fg=orange
set-window-option -g clock-mode-colour colour64
set-window-option -g window-status-bell-style fg=colour235,bg=colour160
set-option -g status-left '#[fg=green]#h'
set-option -g status-right '#[fg=cyan,bold]%H:%M #[fg=grey]%d-%b-%y'
set-option -g automatic-rename on
set-option -g automatic-rename-format "#{?#{#{b:pane_current_path},==:#{pane_current_command},zsh},#{b:pane_current_path},#{pane_current_command}}"

# --- Prefix and Keybindings ---
set-option -g prefix C-a
bind C-a send-prefix
bind r source-file ~/.config/tmux/tmux.conf \; display-message "Configuration reloaded"

# Panes movement (smart with Vim detection)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

bind-key -n 'C-\' if-shell "$is_vim" 'send-keys C-\\' 'select-pane -l'
bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

# Resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Window switching
bind -n S-Left  previous-window
bind -n S-Right next-window

# Split panes in the same directory
bind c new-window -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind '%' split-window -c "#{pane_current_path}"
bind '"' split-window -h -c "#{pane_current_path}"

# Synchronize panes
bind-key S setw synchronize-panes

# Kill commands
bind-key X confirm-before -p "Sure?" kill-window
bind-key x kill-pane

# --- Copy Mode ---
# Platform-specific clipboard integration
if-shell 'uname | grep -qi darwin' " \
    bind -T copy-mode-vi v send -X begin-selection; \
    bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'; \
    bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'; \
    bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy' \
" " \
    bind -T copy-mode-vi v send -X begin-selection; \
    bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -selection clipboard -in'; \
    bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel 'xclip -selection clipboard -in'; \
    bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'xclip -selection clipboard -in' \
"

# --- Neovim/Vim Integration ---
# Allow tmux to forward focus events for neovim
set-option -g focus-events on
