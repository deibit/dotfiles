# Terminal options
set -g default-terminal "tmux-256color"
set -g default-shell /opt/homebrew/bin/zsh
set-option -a terminal-features 'tmux-256color:RGB'

# Auto window renum reorganization
set-option -q renumber-windows on

# Make tmux pass right keys to shell
set-window-option -g xterm-keys on

# Rebind prefix
set -g prefix C-a

# But send it to shell if needed
bind C-a send-prefix

# Rebind copy-mode to a better Spanish keyboard setup
bind-key y copy-mode

set -g base-index 1
setw -g pane-base-index 1

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

setw -g bell-action none

set-option -g mouse on
set-option -g set-clipboard on

# Asegurar compatibilidad con macOS
set-option -sg escape-time 0

# Copia con rat√≥n y pbcopy en macOS
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode MouseDragEnd1Pane send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Detectar sistema operativo y configurar la copia al portapapeles
bind-key -T copy-mode MouseDragEnd1Pane send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Reload tmux config
bind-key r source-file ~/.config/tmux/tmux.conf

# Synchronize panes
bind-key S setw synchronize-panes

# Kill pane NOW
bind-key x kill-pane
bind-key X kill-window

# Move panes
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

# Pane resizing
bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'

bind-key -T copy-mode-vi M-h resize-pane -L 1
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 1

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Copy mode
bind -T copy-mode-vi v send-keys -X begin-selection

# statusbar
set-window-option -g window-status-activity-style fg=blue

# Set tab name with the path or executable names
# from: https://stackoverflow.com/questions/28376611/how-to-automatically-rename-tmux-windows-to-the-current-directory
set-option -g status-interval 1
set-option -g automatic-rename-format "#{?#{==:#{pane_current_command},zsh},#{b:pane_current_path},#{pane_current_command}}"

# default statusbar colors
set-option -g status-bg colour235
set-option -g status-fg colour242

# clock
set-window-option -g clock-mode-colour colour64 #green

# bell
set-window-option -g window-status-bell-style fg=colour235,bg=colour160 #base02, red

# statusline
# set-option -g status-left '#[fg=red]#{pane_current_path}'
# set -g status-left '#[fg=green]#(whoami)@#(hostname -s)'
set -g status-left '#[fg=green]#H'
# set -g status-left-length 35
set -g status-right '#[fg=cyan,bold]%H:%M #[fg=grey]%d-%b-%y'

# Highlight active window
setw -g window-status-current-style fg=orange

# Center window list
set -g status-justify centre

# Neovim
set-option -g focus-events on

# Open panes in the same directory
bind c new-window -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind '%' split-window -c "#{pane_current_path}"
bind '"' split-window -h -c "#{pane_current_path}"

# List of plugins
# set -g @plugin "tmux-plugins/tpm"
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-resurrect'

# if-shell '[ -d ~/.tmux/plugins/tpm ]' 'run ~/.tmux/plugins/tpm/tpm' 'display-message "TPM no encontrado"'

# for vim
# set -g @resurrect-strategy-vim 'session'
# for neovim
# set -g @resurrect-strategy-nvim 'session'
